#!/bin/bash

if [ "$1" == "-this" ]; then

    if [ -e buildInfo ]; then
	info=`cat buildInfo`
	cd
	echo $info > cppBuildLocation
	echo
	echo -e "\033[94;1mBuild Info Changed\033[0m"
	echo
	exit 1
    else
	echo
	echo -e "\033[91;1;25mBuild Info not found, exiting!!!\033[0m"
	echo
	exit 1
    fi
fi
if [ -z $1 ]; then
	echo
	echo -e "\033[91;1;25mProject name omitted, exiting!!!\033[0m"
	echo 
	exit 1
elif [ -d $1 ]; then
	echo
	echo -e "\033[91;1;25mError, directory already exist, exiting!!!\033[0m"
	echo
	exit 1
fi
fName=$1
mkdir $1
cd $1
mkdir include build
if [ -z $2 ]; then
	fName=$1
else
	fName=$2
fi

echo "// auto-generated entry point cpp file

#include <iostream>

int main () {

    std::cout<<\"Hello, $1 Project\"<<std::endl;
}" > ${fName}.cpp
echo "cmake_minimum_required(VERSION 3.10.2) 
project ($1)

file (GLOB SOURCES \"*.cpp\" \"include/*\")

set (CMAKE_EXPORT_COMPILE_COMMANDS ON)
 
add_executable ($fName \${SOURCES})" > CMakeLists.txt

echo "$(pwd)/build^${fName}" > buildInfo
cd build
cmake ..
make
cd ..; ln -s build/compile_commands.json compile_commands.json
echo
echo "=============================================="
echo "+                                            +"
echo -e "+        \033[94;5;1mProject Successfully Created        \033[0m+"
echo "+                                            +"
echo "=============================================="
echo
